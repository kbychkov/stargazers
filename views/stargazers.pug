extends layout

block styles
  link(rel='stylesheet', href='https://unpkg.com/chartist/dist/chartist.min.css')

block scripts
  script(src='https://unpkg.com/chartist/dist/chartist.min.js')
  script(src='https://unpkg.com/axios/dist/axios.min.js')
  script(src='https://unpkg.com/dayjs/dayjs.min.js')
  script.
    (url => {
      const loading = (() => {
        const el = document.querySelector('.loading');
        const elText = el.querySelector('div');

        return {
          show: () => el.style.display = 'flex',
          hide: () => el.style.display = 'none',
          text: text => elText.innerText = text
        }
      })();

      loading.text('Loading data...');

      axios.get(url).then(response => {
        let accumulator = 0;
        let buffer = [];

        for (let prop in response.data) {
          accumulator += response.data[prop];
          buffer.push({
            x: new Date(prop),
            y: accumulator
          })
        }

        loading.hide();

        new Chartist.Line('.ct-chart', {
          series: [{
            data: buffer
          }]
        }, {
          axisX: {
            type: Chartist.FixedScaleAxis,
            divisor: 5,
            labelInterpolationFnc: value => {
              return dayjs(value).format('MMM YYYY');
            }
          },
          axisY: {
            onlyInteger: true
          },
          chartPadding: {
            left: 0
          },
          fullWidth: true,
          lineSmooth: Chartist.Interpolation.step(),
          low: 0,
          showArea: true,
          showPoint: false
        });
      }).catch(error => {
        loading.text(error);
      });
    })('#{url}');

block content
  h1.chart-title The stargazers chart for #[a(href=`https://github.com/${owner}/${repo}`) #{owner}/#{repo}]
  .ct-chart.ct-octave
    .loading
      div
